server {
        listen 8080;
        listen [::]:8080;
        server_name _;

        return 301 https://www.${NGINX_HOSTNAME}$request_uri;
}

server {
        listen 8443 default_server ssl http2;
        listen [::]:8443 default_server ssl http2;
        server_name _;

        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;
        ssl_trusted_certificate /etc/nginx/ssl/chain.pem;

        return 301 $scheme://www.${NGINX_HOSTNAME}$request_uri;

        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
}

server {
        listen 8443 ssl http2;
        listen [::]:8443 ssl http2;
        server_name www.${NGINX_HOSTNAME};

        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;
        ssl_trusted_certificate /etc/nginx/ssl/chain.pem;

        add_header Access-Control-Allow-Methods "GET, HEAD, POST" always;
        add_header Allow "GET, HEAD, POST" always;

        if ( $host != www.${NGINX_HOSTNAME} ) {
                return 444;
        }

        if ($request_method !~ ^(GET|HEAD|POST)$ ) {
                return 444;
        }

        location / {
                autoindex off;
                proxy_pass http://web:3000/;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_redirect off;
        }
}