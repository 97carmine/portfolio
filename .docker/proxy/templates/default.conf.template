server {
        listen 80;
        listen [::]:80;
        server_name ^(www.)?${NGINX_HOSTNAME}$;

        modsecurity on;
        modsecurity_rules_file /etc/nginx/modsec/main.conf;

        if ( $host !~ ^(www.)?${NGINX_HOSTNAME}$ ) {
                return 444;
        }

        return 301 https://$host$request_uri;
}

server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name ${NGINX_HOSTNAME};
        ssl_certificate /etc/letsencrypt/live/${NGINX_HOSTNAME}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${NGINX_HOSTNAME}/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/${NGINX_HOSTNAME}/chain.pem;

        modsecurity on;
        modsecurity_rules_file /etc/nginx/modsec/main.conf;

        if ( $host != ${NGINX_HOSTNAME} ) {
                return 444;
        }

        return 301 $scheme://www.$host$request_uri;

        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
}

server {
        listen 443 default_server ssl http2;
        listen [::]:443 default_server ssl http2;
        server_name www.${NGINX_HOSTNAME};
        ssl_certificate /etc/letsencrypt/live/${NGINX_HOSTNAME}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${NGINX_HOSTNAME}/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/${NGINX_HOSTNAME}/chain.pem;

        modsecurity on;
        modsecurity_rules_file /etc/nginx/modsec/main.conf;

        add_header Access-Control-Allow-Methods "GET, HEAD, POST" always;
        add_header Allow "GET, HEAD, POST" always;

        if ( $host != www.${NGINX_HOSTNAME} ) {
                return 444;
        }

        if ($request_method !~ ^(GET|HEAD|POST)$ ) {
                return 444;
        }

        location / {
                autoindex off;
                proxy_pass http://web:3000/;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_redirect off;
        }
}